{"ast":null,"code":"import _objectSpread from \"/home/varkala/reactjs/keeper-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/varkala/reactjs/keeper-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/varkala/reactjs/keeper-clone/src/components/CreateArea.jsx\";\nimport React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction CreateArea(props) {\n  var _useState = useState({\n    title: \"\",\n    content: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      note = _useState2[0],\n      setNote = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isClicked = _useState4[0],\n      setState = _useState4[1];\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setNote(function (prevNote) {\n      return _objectSpread(_objectSpread({}, prevNote), {}, {\n        [name]: value\n      });\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  } //Expanding when textarea clicked\n\n\n  function inputClick() {\n    setState(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"create-note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, isClicked && /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    onChange: handleChange,\n    value: note.title,\n    placeholder: \"Title\",\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"content\",\n    onChange: handleChange,\n    onClick: inputClick,\n    value: note.content,\n    placeholder: \"Take a note...\",\n    rows: isClicked ? 3 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), isClicked && /*#__PURE__*/React.createElement(Zoom, {\n    in: isClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    onClick: submitNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default CreateArea;","map":{"version":3,"sources":["/home/varkala/reactjs/keeper-clone/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","title","content","note","setNote","isClicked","setState","handleChange","event","target","name","value","prevNote","submitNote","onAdd","preventDefault","inputClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,kBACDL,QAAQ,CAAC;AAC/BM,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,OAAO,EAAE;AAFsB,GAAD,CADP;AAAA;AAAA,MAClBC,IADkB;AAAA,MACZC,OADY;;AAAA,mBAKKT,QAAQ,CAAC,KAAD,CALb;AAAA;AAAA,MAKlBU,SALkB;AAAA,MAKPC,QALO;;AAOzB,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,wBACHA,KAAK,CAACC,MADH;AAAA,QACnBC,IADmB,iBACnBA,IADmB;AAAA,QACbC,KADa,iBACbA,KADa;AAG3BP,IAAAA,OAAO,CAAC,UAACQ,QAAD,EAAc;AACpB,6CACKA,QADL;AAEE,SAACF,IAAD,GAAQC;AAFV;AAID,KALM,CAAP;AAMD;;AAED,WAASE,UAAT,CAAoBL,KAApB,EAA2B;AACzBR,IAAAA,KAAK,CAACc,KAAN,CAAYX,IAAZ;AACAC,IAAAA,OAAO,CAAC;AACNH,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KAAD,CAAP;AAIAM,IAAAA,KAAK,CAACO,cAAN;AACD,GAzBwB,CA0BzB;;;AACA,WAASC,UAAT,GAAsB;AACpBV,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,iBACR;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAEE,YAFZ;AAGE,IAAA,KAAK,EAAEJ,IAAI,CAACF,KAHd;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,YAAY,EAAC,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAUE;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,QAAQ,EAAEM,YAFZ;AAGE,IAAA,OAAO,EAAES,UAHX;AAIE,IAAA,KAAK,EAAEb,IAAI,CAACD,OAJd;AAKE,IAAA,WAAW,EAAC,gBALd;AAME,IAAA,IAAI,EAAEG,SAAS,GAAG,CAAH,GAAO,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAkBGA,SAAS,iBACR,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAEA,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEQ,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAnBJ,CADF,CADF;AA8BD;;AAED,eAAed,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [isClicked, setState] = useState(false);\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.onAdd(note);\n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n    event.preventDefault();\n  }\n  //Expanding when textarea clicked\n  function inputClick() {\n    setState(true);\n  }\n\n  return (\n    <div>\n      <form className=\"create-note\">\n        {isClicked && (\n          <input\n            name=\"title\"\n            onChange={handleChange}\n            value={note.title}\n            placeholder=\"Title\"\n            autoComplete=\"off\"\n          />\n        )}\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          onClick={inputClick}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows={isClicked ? 3 : 1}\n        />\n        {isClicked && (\n          <Zoom in={isClicked}>\n            <Fab onClick={submitNote}>\n              <AddIcon />\n            </Fab>\n          </Zoom>\n        )}\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n"]},"metadata":{},"sourceType":"module"}